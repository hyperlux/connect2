server {
    listen 80;
    listen [::]:80;
    server_name auroville.social api.auroville.social;
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Allow ACME challenge for certificate renewal
    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/html/AurovilleConnect/dist;
    }
}

# Main application server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name auroville.social;

    ssl_certificate /etc/letsencrypt/live/auroville.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auroville.social/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    
    root /var/www/html/AurovilleConnect/dist;
    index index.html;

    # Handle SPA routing
    location / {
        try_files $uri $uri/ /index.html =404;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }
    
    location /service-worker.js {
        root /var/www/html/AurovilleConnect/dist;
        try_files $uri =404;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, no-transform";
    }

    # Proxy API requests to the backend
    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        # Let the backend handle CORS
        proxy_pass_request_headers on;
    }
}

# API server
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name api.auroville.social;

    ssl_certificate /etc/letsencrypt/live/auroville.social/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/auroville.social/privkey.pem;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    location / {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;

        # Let the backend handle CORS
        proxy_pass_request_headers on;
    }
}
